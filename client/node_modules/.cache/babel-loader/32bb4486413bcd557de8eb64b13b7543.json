{"ast":null,"code":"const API_URL = \"http://localhost:8000\";\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n  console.log(await response.json()); //   const {habitablePlanets}=await response.json()\n  // console.log(habitablePlanets);\n  //   return habitablePlanets\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: 'post',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(launch)\n    });\n  } catch (error) {\n    return {\n      ok: false\n    };\n  }\n}\n\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(`${API_URL}/launches/${id}`, {\n      method: 'delete'\n    });\n  } catch (error) {\n    console.log(error);\n    return {\n      ok: false\n    };\n  } // TODO: Once API is ready.\n  // Delete launch with given ID.\n\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/home/bilal/Desktop/node_practice/nasa-app/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","response","fetch","json","console","log","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","error","ok","httpAbortLaunch","id"],"mappings":"AAAA,MAAMA,OAAO,GAAC,uBAAd;;AAEA,eAAeC,cAAf,GAAgC;AAC9B;AACA;AACF,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,UAAZ,CAA5B;AACE,SAAO,MAAME,QAAQ,CAACE,IAAT,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAMJ,QAAQ,CAACE,IAAT,EAAlB,EAL8B,CAMhC;AACA;AACA;AAGC;;AAED,eAAeG,eAAf,GAAiC;AAC/B;AACA;AACA,QAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,WAAZ,CAA5B;AACA,QAAMQ,eAAe,GAAC,MAAMN,QAAQ,CAACE,IAAT,EAA5B;AACC,SAAOI,eAAe,CAACC,IAAhB,CAAqB,CAACC,CAAD,EAAGC,CAAH,KAAO;AAClC,WAAOD,CAAC,CAACE,YAAF,GAAeD,CAAC,CAACC,YAAxB;AACD,GAFO,CAAP;AAGF;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;AACtC;AACA;AACA,MAAI;AACH,WAAO,MAAMX,KAAK,CAAE,GAAEH,OAAQ,WAAZ,EAAuB;AACtCe,MAAAA,MAAM,EAAC,MAD+B;AAEtCC,MAAAA,OAAO,EAAC;AACZ,wBAAe;AADH,OAF8B;AAKtCC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALiC,KAAvB,CAAlB;AAOA,GARD,CAQE,OAAOM,KAAP,EAAc;AACf,WAAM;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAN;AACA;AAEF;;AAED,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC;AACjC,MAAI;AACF,WAAO,MAAMpB,KAAK,CAAE,GAAEH,OAAQ,aAAYuB,EAAG,EAA3B,EAA6B;AAC7CR,MAAAA,MAAM,EAAC;AADsC,KAA7B,CAAlB;AAID,GALD,CAKE,OAAOK,KAAP,EAAc;AACdf,IAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACA,WAAM;AACJC,MAAAA,EAAE,EAAC;AADC,KAAN;AAGD,GAXgC,CAYjC;AACA;;AACD;;AAED,SACEpB,cADF,EAEEM,eAFF,EAGEM,gBAHF,EAIES,eAJF","sourcesContent":["const API_URL=\"http://localhost:8000\"\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\nconst response=  await fetch(`${API_URL}/planets`)\n  return await response.json()\n  console.log(await response.json());\n//   const {habitablePlanets}=await response.json()\n// console.log(habitablePlanets);\n//   return habitablePlanets\n\n  \n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n  const response=  await fetch(`${API_URL}/launches`);\n  const fetchedLaunches=await response.json()\n   return fetchedLaunches.sort((a,b)=>{\n    return a.flightNumber-b.flightNumber;\n  })\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n  try {\n   return await fetch(`${API_URL}/launches`,{\n      method:'post',\n      headers:{\n  \"Content-Type\":\"application/json\",\n      },\n      body:JSON.stringify(launch)\n    })\n  } catch (error) {\n   return{ ok:false}\n  }\n\n}\n\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(`${API_URL}/launches/${id}`,{\n      method:'delete'\n    })\n    \n  } catch (error) {\n    console.log(error);\n    return{\n      ok:false\n    }\n  }\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}